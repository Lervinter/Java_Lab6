import java.util.Arrays;

class Cinema {
    private int[][][] seats;

    public Cinema(int halls, int rows, int seatsPerRow) {
        seats = new int[halls][rows][seatsPerRow];
    }

    public void bookSeats(int hallNumber, int row, int[] seatsToBook) {
        for (int seat : seatsToBook) {
            if (isValidSeat(hallNumber, row, seat) && seats[hallNumber][row][seat] == 0) {
                seats[hallNumber][row][seat] = 1;
                System.out.println("Seat " + seat + " in Row " + row + " of Hall " + hallNumber + " booked successfully.");
            } else {
                System.out.println("Seat " + seat + " in Row " + row + " of Hall " + hallNumber + " is already booked or invalid.");
            }
        }
    }

    public void cancelBooking(int hallNumber, int row, int[] seatsToCancel) {
        for (int seat : seatsToCancel) {
            if (isValidSeat(hallNumber, row, seat) && seats[hallNumber][row][seat] == 1) {
                seats[hallNumber][row][seat] = 0;
                System.out.println("Booking canceled for Seat " + seat + " in Row " + row + " of Hall " + hallNumber + ".");
            } else {
                System.out.println("Seat " + seat + " in Row " + row + " of Hall " + hallNumber + " is not booked or invalid.");
            }
        }
    }

    public boolean checkAvailability(int hallNumber, int numSeats) {
        for (int row = 0; row < seats[hallNumber].length; row++) {
            int consecutiveSeats = 0;
            for (int seat : seats[hallNumber][row]) {
                if (seat == 0) {
                    consecutiveSeats++;
                    if (consecutiveSeats == numSeats) {
                        return true;
                    }
                } else {
                    consecutiveSeats = 0;
                }
            }
        }
        return false;
    }

    public void printSeatingArrangement(int hallNumber) {
        System.out.println("Seating arrangement for Hall " + hallNumber + ":");
        for (int row = 0; row < seats[hallNumber].length; row++) {
            System.out.println(Arrays.toString(seats[hallNumber][row]));
        }
    }

    private boolean isValidSeat(int hallNumber, int row, int seat) {
        return row >= 0 && row < seats[hallNumber].length && seat >= 0 && seat < seats[hallNumber][row].length;
    }

    public static void main(String[] args) {
        Cinema cinema = new Cinema(5, 10, 20);

        cinema.bookSeats(1, 3, new int[]{5, 6, 7});
        cinema.bookSeats(2, 5, new int[]{8, 9, 10});
        cinema.cancelBooking(1, 3, new int[]{6, 7});

        if (cinema.checkAvailability(2, 3)) {
            System.out.println("Three consecutive seats are available in Hall 2.");
        } else {
            System.out.println("Three consecutive seats are not available in Hall 2.");
        }

        cinema.printSeatingArrangement(1);
    }
}
